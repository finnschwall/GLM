Search.setIndex({"docnames": ["index", "modules/intro", "modules/module_aleph_alpha", "modules/module_alm", "modules/module_gemini", "modules/module_llama", "modules/module_openai", "modules/module_resources"], "filenames": ["index.md", "modules/intro.rst", "modules/module_aleph_alpha.md", "modules/module_alm.md", "modules/module_gemini.md", "modules/module_llama.md", "modules/module_openai.md", "modules/module_resources.md"], "titles": ["Welcome to PyAML\u2019s documentation!", "Introduction", "Aleph Alpha", "Core", "Gemini", "Local LlaMa models", "OpenAI", "Helpers"], "terms": {"introduct": 0, "core": 0, "alm": [0, 1, 5], "dii": 0, "local": [0, 1], "llama": [0, 1], "model": [0, 1, 2, 3, 4, 6], "background": 0, "resourc": [0, 7], "acquir": 0, "usag": 0, "info": [0, 1, 3], "instal": [0, 4], "hardwar": 0, "acceler": 0, "how": [0, 1, 2, 3, 4, 6], "us": [0, 1, 2, 3, 4, 6], "without": [0, 3], "gpu": 0, "openai": [0, 1, 3], "intro": 0, "aleph": [0, 1, 5], "alpha": [0, 1, 5], "gemini": 0, "helper": 0, "The": [1, 3, 5], "notebook": [1, 5], "can": [1, 2, 3, 5, 6], "also": [1, 3, 5], "found": [1, 5], "exampl": [1, 3], "folder": 1, "In": 1, "nbsp": 1, "1": [1, 2, 3, 5], "load_ext": 1, "autoreload": 1, "2": [1, 2], "from": [1, 2, 3, 4, 5, 6], "functool": 1, "import": [1, 2, 4, 5, 6], "partial": 1, "pprint": 1, "pp": 1, "pp_origin": 1, "width": 1, "180": 1, "indent": 1, "182": 1, "follow": [1, 5], "most": [1, 3, 5], "concept": 1, "ar": [1, 2, 3, 4, 5, 6], "explain": 1, "gpt": [1, 6], "4": [1, 3, 6], "i": [1, 2, 3, 4, 5, 6], "backend": [1, 5], "exchang": 1, "ani": [1, 5], "suffici": 1, "capabl": 1, "all": [1, 3, 5, 6], "languag": 1, "deriv": [1, 3], "abstract": [1, 3], "It": [1, 5], "provid": [1, 5], "common": [1, 3], "interfac": 1, "whatev": [1, 5], "servic": 1, "being": 1, "method": 1, "avail": [1, 2, 3, 5], "each": [1, 2, 3, 4, 5, 6], "via": [1, 2, 5, 6], "input": [1, 2, 6], "output": [1, 2, 3, 4, 5, 6], "scheme": 1, "howev": 1, "do": [1, 3], "possess": 1, "uniqu": 1, "abil": 1, "properti": [1, 3], "peculiar": 1, "altern": [1, 2, 5, 6], "lumin": [1, 2], "extend": [1, 2], "pyalm": [1, 2, 3, 4, 5, 6, 7], "alephalpha": [1, 2], "llm": [1, 2, 3, 4, 5, 6], "quot": 1, "control": [1, 2, 5], "aleph_alpha_kei": [1, 2], "kei": [1, 2, 6], "Or": 1, "path": [1, 3, 5], "n_thread": [1, 5], "8": 1, "n_gpu_lay": [1, 5], "70": 1, "n_ctx": [1, 2, 5], "4096": 1, "verbos": [1, 2, 3, 4, 5, 6], "A": [1, 2, 5], "quick": 1, "detail": 1, "here": [1, 3, 5], "should": [1, 5], "you": [1, 2, 3, 5, 6], "extens": 1, "combin": 1, "setup_backend": [1, 5], "befor": 1, "gener": [1, 2, 3, 4, 5, 6], "gpt4": [1, 6], "openai_kei": [1, 6], "sk": 1, "chat": [1, 3], "reli": 1, "convers": [1, 3], "tracker": [1, 3], "variou": [1, 5, 7], "integr": 1, "contain": [1, 5], "much": [1, 5], "more": [1, 3, 5], "than": [1, 2, 3, 4, 5, 6], "just": [1, 3], "messag": [1, 3], "like": [1, 3, 5], "e": [1, 2, 3, 5], "g": [1, 2, 3, 5], "function": [1, 3, 6, 7], "call": [1, 2, 3, 6], "sourc": [1, 2], "etc": [1, 2, 3], "But": [1, 5], "let": 1, "": [1, 3, 5], "take": [1, 3, 5], "look": 1, "simpl": 1, "3": [1, 2, 3, 5, 6], "conversationrol": [1, 3], "cr": 1, "def": 1, "build_example_convo": 1, "reset_track": [1, 3], "clear": 1, "everyth": [1, 5], "need": [1, 5], "later": 1, "everi": 1, "complet": [1, 2, 3, 4, 5, 6], "add": [1, 3], "an": [1, 3, 5], "assist": [1, 3], "entri": [1, 3], "set_system_messag": [1, 3], "help": [1, 5, 7], "chit": 1, "bot": 1, "your": [1, 5], "favourit": 1, "thing": 1, "world": 1, "final": [1, 5], "have": [1, 3, 5], "librari": [1, 2, 3, 4, 5, 6], "simplifi": 1, "unifi": 1, "access": [1, 2, 5, 6], "larg": 1, "add_tracker_entri": [1, 3], "user": [1, 3], "heard": 1, "sort": 1, "api": [1, 2, 3, 4, 5, 6], "endpoint": 1, "infer": 1, "done": [1, 2, 3, 4, 5, 6], "real": 1, "time": [1, 3, 5], "return": [1, 2, 3, 4, 5, 6], "entir": [1, 3], "mai": [1, 5], "create_complet": [1, 3], "max_token": [1, 2, 3, 4, 5, 6], "200": 1, "temperatur": [1, 5], "0": [1, 2, 3, 4, 5, 6], "print": 1, "ye": 1, "39": 1, "fantast": 1, "tool": [1, 5], "singl": [1, 5], "differ": [1, 2, 3, 4, 5, 6], "regardless": 1, "underli": 1, "thi": [1, 3, 5], "make": [1, 5], "easier": [1, 5], "work": [1, 5, 6], "don": [1, 3, 5], "t": [1, 3, 5], "worri": 1, "about": 1, "specif": 1, "individu": 1, "great": 1, "anyon": 1, "5": [1, 6], "create_gener": [1, 3], "note": 1, "onli": [1, 3], "yield_typ": 1, "relev": 1, "sequenc": [1, 2, 3, 4, 5, 6], "preserv": 1, "enabl": 1, "see": 1, "doc": 1, "list": [1, 2, 3, 4, 5, 6], "top": [1, 2, 3, 4, 5, 6], "token": [1, 2, 3, 4, 5, 6], "respect": 1, "logit": [1, 2, 3, 4, 5, 6], "end": [1, 3], "l": 1, "both": 1, "case": 1, "collect": 1, "meta": [1, 3], "some": 1, "inform": [1, 3], "per": [1, 2, 5, 6], "second": 1, "consist": 1, "other": [1, 3, 5], "price": [1, 2, 6], "6": 1, "finish_meta": [1, 2, 6], "function_cal": [1, 3], "fals": [1, 2, 3, 4, 5, 6], "finish_reason": 1, "none": [1, 2, 3, 4, 5, 6], "prompt_token": 1, "204": 1, "generated_token": 1, "93": 1, "total_token": 1, "297": 1, "total_tim": 1, "878": 1, "t_per_": 1, "token_total_per_": 1, "50": 1, "52937887238518": 1, "cost": [1, 2, 6], "006": 1, "00558": 1, "total": [1, 5], "0117": 1, "total_c": 1, "17": 1, "unit": 1, "total_finish_tim": 1, "310944505999942": 1, "There": [1, 5], "instanc": 1, "when": [1, 2, 3, 4, 5, 6], "deploi": 1, "where": [1, 3], "stream": [1, 3, 5, 6], "lead": [1, 3, 5], "issu": 1, "render": 1, "incomplet": 1, "latex": 1, "For": [1, 5], "defin": 1, "whole": 1, "set": [1, 2, 5, 6], "7": [1, 5], "preserved_sequ": [1, 3], "start": [1, 5], "name": [1, 2, 3, 6], "latex1": 1, "possibl": [1, 3], "new": [1, 3], "pass": [1, 3], "string": [1, 2, 3, 4, 5, 6], "first": [1, 5], "argument": 1, "write": [1, 3], "down": 1, "formula": 1, "enclos": [1, 3], "unfinish": 1, "yield": 1, "anywai": [1, 5], "sure": 1, "few": 1, "quadrat": 1, "x": [1, 2, 3, 4, 5, 6], "frac": 1, "b": 1, "pm": 1, "sqrt": 1, "4ac": 1, "2a": 1, "pythagorean": 1, "theorem": 1, "c": [1, 5], "euler": 1, "pi": 1, "power": 1, "featur": 1, "random": 1, "get_weath": 1, "locat": [1, 4], "days_from_now": 1, "retriev": [1, 2, 3, 4, 5, 6], "weather": 1, "data": [1, 3], "best": 1, "param": [1, 3, 5], "citi": 1, "region": 1, "countri": 1, "which": [1, 3], "pull": 1, "dai": 1, "compar": 1, "todai": 1, "get": [1, 3, 5, 6], "must": [1, 3], "lt": 1, "f": 1, "deg": 1, "cel": 1, "round": 1, "uniform": 1, "10": [1, 5], "35": 1, "hum": 1, "20": [1, 5], "95": 1, "register_funct": [1, 3], "available_funct": [1, 3], "pydoc": [1, 3], "int": [1, 2, 3, 4, 5, 6], "34": 1, "9": 1, "predict": 1, "yoooo": 1, "tell": 1, "me": 1, "what": [1, 5], "sydnei": 1, "week": 1, "sorri": 1, "up": [1, 5], "ok": 1, "tomorrow": 1, "fetch": 1, "might": 1, "moment": 1, "expect": 1, "13": 1, "degre": [1, 5], "celsiu": 1, "humid": 1, "wonder": 1, "exactli": 1, "did": 1, "why": 1, "told": 1, "wait": [1, 3], "answer": 1, "li": 1, "build": [1, 2, 3, 4, 5, 6], "prompt": [1, 2, 3, 4, 5, 6], "while": 1, "chatgpt": 1, "json": [1, 3], "object": 1, "process": [1, 2, 3, 4, 5, 6], "almost": 1, "ident": 1, "chang": [1, 2, 3], "handl": [1, 3], "overrid": [1, 3], "built": [1, 5], "accord": 1, "rule": 1, "laid": 1, "out": [1, 3, 5], "closer": 1, "stuff": [1, 5], "could": [1, 5], "disabl": 1, "valu": [1, 3, 5], "finish": [1, 5], "histori": [1, 3], "either": [1, 3], "specifi": [1, 3], "overridden": 1, "alwai": [1, 5], "default": 1, "base_set": 1, "generation_prefix": [1, 3], "functions_en": 1, "true": [1, 3, 5], "function_autointegr": 1, "function_integration_templ": [1, 3], "n": [1, 3], "func_delimiter_start": 1, "function_sequ": [1, 3], "func_delimiter_end": 1, "function_return_valu": [1, 3], "symbol": [1, 3], "tabl": 1, "placehold": 1, "evalu": 1, "point": 1, "latter": [1, 3], "regex": 1, "match": 1, "text": [1, 2, 3, 4, 5, 6], "addit": [1, 2, 3, 4, 5, 6], "wa": [1, 5], "dure": [1, 3], "initi": 1, "replac": [1, 3], "list_of_funct": [1, 3], "come": [1, 5], "our": 1, "11": [1, 5], "system": [1, 3], "func_inclusion_messag": 1, "abov": 1, "To": [1, 3], "them": [1, 3], "correct": [1, 3], "leav": [1, 3], "foo": [1, 3], "bar": [1, 3], "would": 1, "immedi": [1, 3], "invers": [1, 3], "TO": [1, 3], "respons": [1, 3], "separ": [1, 3], "pleas": [1, 3], "so": [1, 3], "he": [1, 3], "awar": [1, 3, 5], "usual": [1, 5], "receiv": 1, "behav": 1, "notic": 1, "we": 1, "part": 1, "prepend_function_support": [1, 3], "12": 1, "system_msg": [1, 3, 6], "content": [1, 3], "citat": 1, "alreadi": 1, "next": [1, 5], "last": [1, 3], "origin": [1, 5], "its": [1, 3], "conv_histori": [1, 6], "role": [1, 3], "gt": 1, "original_cal": 1, "72": 1, "result": 1, "ultim": 1, "although": 1, "format": [1, 2, 3, 4, 5, 6], "itself": [1, 3], "depend": [1, 2, 5], "14": 1, "build_prompt_as_str": [1, 3], "block_gen_prefix": [1, 3], "themselv": 1, "special": 1, "If": [1, 2, 3, 4, 5, 6], "encount": 1, "halt": 1, "given": [1, 2], "pylot": 1, "extract": 1, "try": [1, 3], "pars": 1, "goe": 1, "well": 1, "dict": [1, 2, 3, 4, 5, 6], "produc": [1, 5], "instruct": 1, "support": [1, 2, 5, 6], "multipl": 1, "assign": 1, "variabl": [1, 3], "current": [1, 2, 6], "inclus": 1, "unknown": 1, "As": [1, 5], "handle_funct": [1, 3], "stop": [1, 2, 3, 4, 5, 6], "includ": [1, 3], "instead": 1, "python_pars": 1, "function_signature_to_dict": 1, "func": 1, "ignor": [2, 6], "env": [2, 6], "var": [2, 6], "aa_token": 2, "non": [2, 5, 6], "one": [2, 3, 5, 6], "anytim": 2, "after": [2, 3, 6], "pricing_factor": 2, "pricing_meta": [2, 6], "pricing_img": 2, "class": [2, 3, 4, 5, 6], "model_path_or_nam": [2, 3, 4, 6], "2048": [2, 5], "kwarg": [2, 3, 4, 5, 6], "available_model": [2, 6], "suprem": 2, "base": [2, 3, 4, 5, 6], "build_prompt": [2, 3, 4, 5, 6], "preserve_flow": [2, 3, 4, 5, 6], "nativ": [2, 3, 4, 5, 6], "paramet": [2, 3, 4, 5, 6], "block": [2, 3, 4, 5, 6], "suffix": [2, 3, 4, 5, 6], "pure": [2, 3, 4, 5, 6], "obj": [2, 3, 4, 5, 6], "create_native_complet": [2, 3, 4, 5, 6], "256": [2, 3, 4, 5, 6], "token_prob_delta": [2, 3, 4, 5, 6], "token_prob_ab": [2, 3, 4, 5, 6], "log_prob": [2, 3, 4, 5, 6], "keep_dict": [2, 3, 4, 5, 6], "No": [2, 3, 4, 5, 6], "maximum": [2, 3, 4, 5, 6], "someth": [2, 3, 4, 5, 6], "els": [2, 3, 4, 5, 6], "raw": [2, 3, 4, 5, 6], "whether": [2, 3, 4, 5, 6], "rel": [2, 3, 4, 5, 6], "ad": [2, 3, 4, 5, 6], "number": [2, 3, 4, 5, 6], "absolut": [2, 3, 4, 5, 6], "log": [2, 3, 4, 5, 6], "prob": [2, 3, 4, 5, 6], "create_native_gener": [2, 3, 4, 5, 6], "detoken": [2, 3, 5], "tok": [2, 5], "get_n_token": [2, 3, 4, 5, 6], "mani": [2, 3, 4, 5, 6], "tokeniz": [2, 3, 4, 5, 6], "amount": [2, 3, 4, 5, 6], "get_remaining_credit": 2, "credit": 2, "still": 2, "remain": 2, "static": 2, "image_from_sourc": 2, "creat": [2, 3], "compat": 2, "imag": 2, "file": [2, 3, 5], "url": 2, "multimodal_complet": 2, "prompt_list": 2, "multimod": 2, "max": 2, "ba": 2, "03": [2, 6], "0375": 2, "045": 2, "05625": 2, "175": 2, "21875": 2, "summar": 2, "factor": 2, "03024": 2, "04536": 2, "currenc": [2, 6], "token_unit": [2, 6], "1000": [2, 6], "path_to_docx": 2, "docx": 2, "vector": [2, 3, 4, 5, 6], "represent": [2, 3, 4, 5, 6], "tokenize_as_str": [2, 3, 4, 5, 6], "convert": [2, 3, 4, 5, 6], "compon": 3, "notabl": 3, "amongst": 3, "least": 3, "implement": [3, 4], "automat": [3, 5], "ideal": 3, "easiest": 3, "enable_funct": 3, "instanti": 3, "own": [3, 5], "feedback": 3, "sentiment": 3, "add_kei": 3, "http": [3, 5], "github": [3, 5], "com": [3, 5], "finnschwal": 3, "blob": 3, "main": 3, "format_specif": 3, "md": 3, "adopt_from_alm": 3, "type": 3, "copi": 3, "state": 3, "deep": 3, "autoconvers": 3, "interact": 3, "callabl": 3, "new_lines_per_rol": 3, "new_lines_afer_rol": 3, "form": 3, "newlin": 3, "prefix": 3, "normal": 3, "doe": 3, "continu": 3, "resolv": 3, "str": 3, "text_obj": 3, "enable_function_cal": 3, "applic": 3, "Will": [3, 5], "attemptedcal": 3, "version": [3, 5], "init_gui": 3, "num_messages_includ": 3, "monkeypatch": 3, "load_histori": 3, "path_or_text": 3, "is_fil": 3, "load": [3, 5], "yaml": 3, "pop_entri": 3, "remov": 3, "element": 3, "care": 3, "split": 3, "due": [3, 5], "pop": 3, "replace_symbol": 3, "additional_symbol": 3, "conv": 3, "option": 3, "temp_symbol": 3, "substitut": 3, "purg": 3, "reset": 3, "save_histori": 3, "save": 3, "save_st": 3, "exclud": 3, "msg": 3, "update_gui": 3, "user_symbol": 3, "pointer": 3, "almset": 3, "factori": 3, "tupl": 3, "global_enable_function_cal": 3, "bool": 3, "automatic_function_integr": 3, "function_start": 3, "function_end": 3, "prompt_obj_is_str": 3, "function_inclusion_instruction_system_msg": 3, "nabov": 3, "nthe": 3, "nthi": 3, "nwould": 3, "nyou": 3, "nbefor": 3, "include_conv_id_as_stop": 3, "enumer": 3, "conversationtrack": 3, "system_messag": 3, "user_info": 3, "inversion_schem": 3, "add_entri": 3, "invert_rol": 3, "datayaml": 3, "classmethod": 3, "from_dict": 3, "dict_obj": 3, "load_from_yaml": 3, "save_to_yaml": 3, "to_dict": 3, "functionformat": 3, "model_specif": 3, "parsestatu": 3, "classifi": 3, "outcom": 3, "no_func_sequence_found": 3, "parsed_dict_return": 3, "parsed_executed_err": 3, "parsed_executed_ok": 3, "undefin": 3, "unparseable_func_found": 3, "conversation_role_constructor": 3, "loader": 3, "node": 3, "conversation_role_represent": 3, "dumper": 3, "alia": 3, "project": [4, 5], "your_project": 4, "pro": 4, "europ": 4, "west3": 4, "requir": [4, 5], "vertex": 4, "ai": 4, "sdk": 4, "cpp": 5, "python": 5, "bind": 5, "header": 5, "pytorch": 5, "huggingfac": 5, "good": 5, "address": 5, "theblok": 5, "hungri": 5, "usabl": 5, "quit": 5, "signific": 5, "speed": 5, "increas": 5, "basic": 5, "path_to_quantized_model_fil": 5, "mostli": 5, "find": 5, "card": 5, "obtain": 5, "perfom": 5, "lower": 5, "same": [5, 6], "faster": 5, "qualiti": 5, "suffer": 5, "immens": 5, "offload": 5, "ha": 5, "effect": 5, "compil": 5, "cubla": 5, "vram": 5, "layer": 5, "low": 5, "ish": 5, "larger": 5, "overhead": 5, "previou": 5, "ones": 5, "account": 5, "estim": 5, "path_to_model": 5, "is_70b": 5, "error": 5, "proper": 5, "futil": 5, "endeavor": 5, "model_path": 5, "quantize_format": 5, "auto": 5, "disable_log_hook": 5, "disable_resource_check": 5, "endless": 5, "512": 5, "min_p": 5, "top_p": 5, "top_k": 5, "repeat_penalti": 5, "load_state_from_disk": 5, "filenam": 5, "restore_ctx_from_disk": 5, "save_ctx_to_disk": 5, "save_state_to_disk": 5, "goal": 5, "orient": 5, "13b": 5, "better": [5, 7], "bla": 5, "cuda": 5, "download": 5, "fit": 5, "precompil": 5, "wheel": 5, "suppli": 5, "n_layer": 5, "util": 5, "recommend": 5, "experi": 5, "strictli": 5, "necessari": 5, "give": 5, "script": 5, "wai": 5, "train": 5, "lora": 5, "fork": 5, "xaed": 5, "tree": 5, "finetun": 5, "now": 5, "And": 5, "debug": 5, "step": 5, "fail": 5, "natur": 5, "task": 5, "far": 5, "exllama": 5, "aggress": 5, "optim": 5, "bit": 5, "Be": 5, "though": 5, "lot": 5, "caus": 5, "degrad": 5, "want": 5, "third": 5, "parti": 5, "thei": 5, "offer": 5, "playground": 5, "framework": 5, "limit": 5, "am": 5, "glad": 5, "googl": 5, "colab": 5, "difficult": 5, "kaggl": 5, "free": 5, "saturncloud": 5, "rixa": 5, "develop": 5, "incredibli": 5, "150": 5, "comput": 5, "hour": 5, "month": 5, "problem": 5, "importantli": 5, "allow": 5, "full": 5, "structur": 5, "temporari": 5, "deploy": 5, "web": 5, "preinstal": 5, "binari": 5, "identifi": 5, "cu117": 5, "cp39": 5, "linux_x86_64": 5, "16": 5, "gb": 5, "ram": 5, "6b": 5, "30b": 5, "openai_api_kei": 6, "rate": 6, "azure_endpoint": 6, "api_vers": 6, "2023": 6, "05": 6, "15": 6, "turbo": 6, "16k": 6, "known": 6, "get_available_model": 6, "0015": 6, "002": 6, "003": 6, "004": 6, "06": 6, "had": 7, "place": 7, "get_resource_diff": 7, "res_a": 7, "res_b": 7, "get_resource_info": 7}, "objects": {"pyalm": [[2, 0, 0, "-", "alephalpha"], [3, 0, 0, "-", "alm"], [4, 0, 0, "-", "gemini"], [5, 0, 0, "-", "llama"], [6, 0, 0, "-", "openai"], [7, 0, 0, "-", "resources"]], "pyalm.alephalpha": [[2, 1, 1, "", "AlephAlpha"]], "pyalm.alephalpha.AlephAlpha": [[2, 2, 1, "", "available_models"], [2, 3, 1, "", "build_prompt"], [2, 3, 1, "", "create_native_completion"], [2, 3, 1, "", "create_native_generator"], [2, 3, 1, "", "detokenize"], [2, 3, 1, "", "get_n_tokens"], [2, 3, 1, "", "get_remaining_credits"], [2, 3, 1, "", "image_from_source"], [2, 3, 1, "", "multimodal_completion"], [2, 2, 1, "", "pricing"], [2, 2, 1, "", "pricing_factors"], [2, 2, 1, "", "pricing_img"], [2, 2, 1, "", "pricing_meta"], [2, 3, 1, "", "summarize"], [2, 3, 1, "", "tokenize"], [2, 3, 1, "", "tokenize_as_str"]], "pyalm.alm": [[3, 1, 1, "", "ALM"], [3, 1, 1, "", "ALMSettings"], [3, 1, 1, "", "ConversationRoles"], [3, 1, 1, "", "ConversationTracker"], [3, 1, 1, "", "DataYAML"], [3, 1, 1, "", "FunctionFormat"], [3, 1, 1, "", "ParseStatus"], [3, 1, 1, "", "Symbols"], [3, 5, 1, "", "conversation_role_constructor"], [3, 5, 1, "", "conversation_role_representer"], [3, 2, 1, "", "i"]], "pyalm.alm.ALM": [[3, 3, 1, "", "add_tracker_entry"], [3, 3, 1, "", "adopt_from_alm"], [3, 3, 1, "", "autoconverse"], [3, 2, 1, "", "available_functions"], [3, 3, 1, "", "build_prompt"], [3, 3, 1, "", "build_prompt_as_str"], [3, 3, 1, "", "create_completion"], [3, 3, 1, "", "create_generator"], [3, 3, 1, "", "create_native_completion"], [3, 3, 1, "", "create_native_generator"], [3, 3, 1, "", "get_n_tokens"], [3, 3, 1, "", "init_gui"], [3, 3, 1, "", "load_history"], [3, 3, 1, "", "pop_entry"], [3, 3, 1, "", "register_functions"], [3, 3, 1, "", "replace_symbols"], [3, 3, 1, "", "reset_tracker"], [3, 3, 1, "", "save_history"], [3, 3, 1, "", "save_state"], [3, 3, 1, "", "set_system_message"], [3, 4, 1, "", "symbols"], [3, 4, 1, "", "system_msg"], [3, 3, 1, "", "tokenize"], [3, 3, 1, "", "tokenize_as_str"], [3, 3, 1, "", "update_gui"], [3, 2, 1, "", "user_symbols"], [3, 4, 1, "", "verbose"]], "pyalm.alm.ALMSettings": [[3, 2, 1, "", "automatic_function_integration"], [3, 2, 1, "", "function_inclusion_instruction_system_msg"], [3, 2, 1, "", "function_integration_template"], [3, 2, 1, "", "function_sequence"], [3, 2, 1, "", "generation_prefix"], [3, 2, 1, "", "global_enable_function_calls"], [3, 2, 1, "", "include_conv_id_as_stop"], [3, 2, 1, "", "preserved_sequences"], [3, 2, 1, "", "prompt_obj_is_str"], [3, 2, 1, "", "verbose"]], "pyalm.alm.ConversationRoles": [[3, 2, 1, "", "ASSISTANT"], [3, 2, 1, "", "USER"]], "pyalm.alm.ConversationTracker": [[3, 3, 1, "", "add_entry"], [3, 2, 1, "", "data"], [3, 2, 1, "", "inversion_scheme"], [3, 3, 1, "", "invert_roles"], [3, 3, 1, "", "reset_tracker"], [3, 2, 1, "", "system_message"], [3, 2, 1, "", "tracker"], [3, 2, 1, "", "user_info"]], "pyalm.alm.DataYAML": [[3, 3, 1, "", "from_dict"], [3, 3, 1, "", "load_from_yaml"], [3, 3, 1, "", "save_to_yaml"], [3, 3, 1, "", "to_dict"]], "pyalm.alm.FunctionFormat": [[3, 2, 1, "", "JSON"], [3, 2, 1, "", "MODEL_SPECIFIC"], [3, 2, 1, "", "PYDOC"]], "pyalm.alm.ParseStatus": [[3, 2, 1, "", "NO_FUNC_SEQUENCE_FOUND"], [3, 2, 1, "", "PARSED_DICT_RETURN"], [3, 2, 1, "", "PARSED_EXECUTED_ERR"], [3, 2, 1, "", "PARSED_EXECUTED_OK"], [3, 2, 1, "", "UNDEFINED"], [3, 2, 1, "", "UNPARSEABLE_FUNC_FOUND"]], "pyalm.gemini": [[4, 1, 1, "", "Gemini"]], "pyalm.gemini.Gemini": [[4, 3, 1, "", "build_prompt"], [4, 3, 1, "", "create_native_completion"], [4, 3, 1, "", "create_native_generator"], [4, 3, 1, "", "get_n_tokens"], [4, 3, 1, "", "tokenize"], [4, 3, 1, "", "tokenize_as_str"]], "pyalm.llama": [[5, 1, 1, "", "LLaMa"]], "pyalm.llama.LLaMa": [[5, 3, 1, "", "build_prompt"], [5, 3, 1, "", "create_native_completion"], [5, 3, 1, "", "create_native_generator"], [5, 3, 1, "", "detokenize"], [5, 3, 1, "", "get_n_tokens"], [5, 3, 1, "", "load_state_from_disk"], [5, 3, 1, "", "restore_ctx_from_disk"], [5, 3, 1, "", "save_ctx_to_disk"], [5, 3, 1, "", "save_state_to_disk"], [5, 3, 1, "", "setup_backend"], [5, 3, 1, "", "tokenize"], [5, 3, 1, "", "tokenize_as_str"]], "pyalm.openai": [[6, 1, 1, "", "OpenAI"]], "pyalm.openai.OpenAI": [[6, 2, 1, "", "available_models"], [6, 3, 1, "", "build_prompt"], [6, 3, 1, "", "create_native_completion"], [6, 3, 1, "", "create_native_generator"], [6, 3, 1, "", "get_available_models"], [6, 3, 1, "", "get_n_tokens"], [6, 2, 1, "", "pricing"], [6, 2, 1, "", "pricing_meta"], [6, 3, 1, "", "tokenize"], [6, 3, 1, "", "tokenize_as_str"]], "pyalm.resources": [[7, 5, 1, "", "get_resource_diff"], [7, 5, 1, "", "get_resource_info"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "pyaml": 0, "": 0, "document": [0, 2, 3, 4, 5, 6, 7], "full": 0, "tabl": 0, "content": 0, "introduct": [1, 2, 3, 7], "aleph": 2, "alpha": 2, "core": 3, "alm": 3, "dii": 3, "gemini": 4, "intro": [4, 6], "local": 5, "llama": 5, "model": 5, "background": 5, "resourc": 5, "acquir": 5, "where": 5, "look": 5, "quantiz": 5, "usag": 5, "info": 5, "cpu": 5, "onli": 5, "gpu": 5, "mix": 5, "70b": 5, "instal": 5, "hardwar": 5, "acceler": 5, "standard": 5, "advanc": 5, "how": 5, "us": 5, "without": 5, "just": 5, "infer": 5, "code": 5, "Not": 5, "so": 5, "secret": 5, "dev": 5, "tip": 5, "openai": 6, "helper": 7}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"Welcome to PyAML\u2019s documentation!": [[0, "welcome-to-pyaml-s-documentation"]], "Full table of contents": [[0, "full-table-of-contents"]], "Introduction": [[1, "introduction"], [2, "introduction"], [3, "introduction"], [7, "introduction"]], "Aleph Alpha": [[2, "aleph-alpha"]], "Documentation": [[2, "module-pyalm.alephalpha"], [3, "module-pyalm.alm"], [4, "module-pyalm.gemini"], [5, "module-pyalm.llama"], [6, "module-pyalm.openai"], [7, "module-pyalm.resources"]], "Core": [[3, "core"]], "ALM DIY": [[3, "alm-diy"]], "Gemini": [[4, "gemini"]], "Intro": [[4, "intro"], [6, "intro"]], "Local LlaMa models": [[5, "local-llama-models"]], "Background and resources": [[5, "background-and-resources"]], "Acquiring models": [[5, "acquiring-models"]], "Where to look": [[5, "where-to-look"]], "Quantizing a model": [[5, "quantizing-a-model"]], "Usage info": [[5, "usage-info"]], "CPU only": [[5, "cpu-only"]], "GPU only or mixed": [[5, "gpu-only-or-mixed"]], "70b": [[5, "b"]], "Installing hardware acceleration": [[5, "installing-hardware-acceleration"]], "GPU-Standard": [[5, "gpu-standard"]], "GPU-Advanced": [[5, "gpu-advanced"]], "How to use without GPU": [[5, "how-to-use-without-gpu"]], "Just inference": [[5, "just-inference"]], "Coding+Inference": [[5, "coding-inference"]], "Not-so-secret dev tip": [[5, "not-so-secret-dev-tip"]], "OpenAI": [[6, "openai"]], "Helpers": [[7, "helpers"]]}, "indexentries": {"alephalpha (class in pyalm.alephalpha)": [[2, "pyalm.alephalpha.AlephAlpha"]], "available_models (pyalm.alephalpha.alephalpha attribute)": [[2, "pyalm.alephalpha.AlephAlpha.available_models"]], "build_prompt() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.build_prompt"]], "create_native_completion() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.create_native_completion"]], "create_native_generator() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.create_native_generator"]], "detokenize() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.detokenize"]], "get_n_tokens() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.get_n_tokens"]], "get_remaining_credits() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.get_remaining_credits"]], "image_from_source() (pyalm.alephalpha.alephalpha static method)": [[2, "pyalm.alephalpha.AlephAlpha.image_from_source"]], "module": [[2, "module-pyalm.alephalpha"], [3, "module-pyalm.alm"], [4, "module-pyalm.gemini"], [5, "module-pyalm.llama"], [6, "module-pyalm.openai"], [7, "module-pyalm.resources"]], "multimodal_completion() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.multimodal_completion"]], "pricing (pyalm.alephalpha.alephalpha attribute)": [[2, "pyalm.alephalpha.AlephAlpha.pricing"]], "pricing_factors (pyalm.alephalpha.alephalpha attribute)": [[2, "pyalm.alephalpha.AlephAlpha.pricing_factors"]], "pricing_img (pyalm.alephalpha.alephalpha attribute)": [[2, "pyalm.alephalpha.AlephAlpha.pricing_img"]], "pricing_meta (pyalm.alephalpha.alephalpha attribute)": [[2, "pyalm.alephalpha.AlephAlpha.pricing_meta"]], "pyalm.alephalpha": [[2, "module-pyalm.alephalpha"]], "summarize() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.summarize"]], "tokenize() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.tokenize"]], "tokenize_as_str() (pyalm.alephalpha.alephalpha method)": [[2, "pyalm.alephalpha.AlephAlpha.tokenize_as_str"]], "alm (class in pyalm.alm)": [[3, "pyalm.alm.ALM"]], "almsettings (class in pyalm.alm)": [[3, "pyalm.alm.ALMSettings"]], "assistant (pyalm.alm.conversationroles attribute)": [[3, "pyalm.alm.ConversationRoles.ASSISTANT"]], "conversationroles (class in pyalm.alm)": [[3, "pyalm.alm.ConversationRoles"]], "conversationtracker (class in pyalm.alm)": [[3, "pyalm.alm.ConversationTracker"]], "datayaml (class in pyalm.alm)": [[3, "pyalm.alm.DataYAML"]], "functionformat (class in pyalm.alm)": [[3, "pyalm.alm.FunctionFormat"]], "json (pyalm.alm.functionformat attribute)": [[3, "pyalm.alm.FunctionFormat.JSON"]], "model_specific (pyalm.alm.functionformat attribute)": [[3, "pyalm.alm.FunctionFormat.MODEL_SPECIFIC"]], "no_func_sequence_found (pyalm.alm.parsestatus attribute)": [[3, "pyalm.alm.ParseStatus.NO_FUNC_SEQUENCE_FOUND"]], "parsed_dict_return (pyalm.alm.parsestatus attribute)": [[3, "pyalm.alm.ParseStatus.PARSED_DICT_RETURN"]], "parsed_executed_err (pyalm.alm.parsestatus attribute)": [[3, "pyalm.alm.ParseStatus.PARSED_EXECUTED_ERR"]], "parsed_executed_ok (pyalm.alm.parsestatus attribute)": [[3, "pyalm.alm.ParseStatus.PARSED_EXECUTED_OK"]], "pydoc (pyalm.alm.functionformat attribute)": [[3, "pyalm.alm.FunctionFormat.PYDOC"]], "parsestatus (class in pyalm.alm)": [[3, "pyalm.alm.ParseStatus"]], "symbols (class in pyalm.alm)": [[3, "pyalm.alm.Symbols"]], "undefined (pyalm.alm.parsestatus attribute)": [[3, "pyalm.alm.ParseStatus.UNDEFINED"]], "unparseable_func_found (pyalm.alm.parsestatus attribute)": [[3, "pyalm.alm.ParseStatus.UNPARSEABLE_FUNC_FOUND"]], "user (pyalm.alm.conversationroles attribute)": [[3, "pyalm.alm.ConversationRoles.USER"]], "add_entry() (pyalm.alm.conversationtracker method)": [[3, "pyalm.alm.ConversationTracker.add_entry"]], "add_tracker_entry() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.add_tracker_entry"]], "adopt_from_alm() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.adopt_from_alm"]], "autoconverse() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.autoconverse"]], "automatic_function_integration (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.automatic_function_integration"]], "available_functions (pyalm.alm.alm attribute)": [[3, "pyalm.alm.ALM.available_functions"]], "build_prompt() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.build_prompt"]], "build_prompt_as_str() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.build_prompt_as_str"]], "conversation_role_constructor() (in module pyalm.alm)": [[3, "pyalm.alm.conversation_role_constructor"]], "conversation_role_representer() (in module pyalm.alm)": [[3, "pyalm.alm.conversation_role_representer"]], "create_completion() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.create_completion"]], "create_generator() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.create_generator"]], "create_native_completion() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.create_native_completion"]], "create_native_generator() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.create_native_generator"]], "data (pyalm.alm.conversationtracker attribute)": [[3, "pyalm.alm.ConversationTracker.data"]], "from_dict() (pyalm.alm.datayaml class method)": [[3, "pyalm.alm.DataYAML.from_dict"]], "function_inclusion_instruction_system_msg (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.function_inclusion_instruction_system_msg"]], "function_integration_template (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.function_integration_template"]], "function_sequence (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.function_sequence"]], "generation_prefix (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.generation_prefix"]], "get_n_tokens() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.get_n_tokens"]], "global_enable_function_calls (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.global_enable_function_calls"]], "i (in module pyalm.alm)": [[3, "pyalm.alm.i"]], "include_conv_id_as_stop (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.include_conv_id_as_stop"]], "init_gui() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.init_gui"]], "inversion_scheme (pyalm.alm.conversationtracker attribute)": [[3, "pyalm.alm.ConversationTracker.inversion_scheme"]], "invert_roles() (pyalm.alm.conversationtracker method)": [[3, "pyalm.alm.ConversationTracker.invert_roles"]], "load_from_yaml() (pyalm.alm.datayaml class method)": [[3, "pyalm.alm.DataYAML.load_from_yaml"]], "load_history() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.load_history"]], "pop_entry() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.pop_entry"]], "preserved_sequences (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.preserved_sequences"]], "prompt_obj_is_str (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.prompt_obj_is_str"]], "pyalm.alm": [[3, "module-pyalm.alm"]], "register_functions() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.register_functions"]], "replace_symbols() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.replace_symbols"]], "reset_tracker() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.reset_tracker"]], "reset_tracker() (pyalm.alm.conversationtracker method)": [[3, "pyalm.alm.ConversationTracker.reset_tracker"]], "save_history() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.save_history"]], "save_state() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.save_state"]], "save_to_yaml() (pyalm.alm.datayaml method)": [[3, "pyalm.alm.DataYAML.save_to_yaml"]], "set_system_message() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.set_system_message"]], "symbols (pyalm.alm.alm property)": [[3, "pyalm.alm.ALM.symbols"]], "system_message (pyalm.alm.conversationtracker attribute)": [[3, "pyalm.alm.ConversationTracker.system_message"]], "system_msg (pyalm.alm.alm property)": [[3, "pyalm.alm.ALM.system_msg"]], "to_dict() (pyalm.alm.datayaml method)": [[3, "pyalm.alm.DataYAML.to_dict"]], "tokenize() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.tokenize"]], "tokenize_as_str() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.tokenize_as_str"]], "tracker (pyalm.alm.conversationtracker attribute)": [[3, "pyalm.alm.ConversationTracker.tracker"]], "update_gui() (pyalm.alm.alm method)": [[3, "pyalm.alm.ALM.update_gui"]], "user_info (pyalm.alm.conversationtracker attribute)": [[3, "pyalm.alm.ConversationTracker.user_info"]], "user_symbols (pyalm.alm.alm attribute)": [[3, "pyalm.alm.ALM.user_symbols"]], "verbose (pyalm.alm.alm property)": [[3, "pyalm.alm.ALM.verbose"]], "verbose (pyalm.alm.almsettings attribute)": [[3, "pyalm.alm.ALMSettings.verbose"]], "gemini (class in pyalm.gemini)": [[4, "pyalm.gemini.Gemini"]], "build_prompt() (pyalm.gemini.gemini method)": [[4, "pyalm.gemini.Gemini.build_prompt"]], "create_native_completion() (pyalm.gemini.gemini method)": [[4, "pyalm.gemini.Gemini.create_native_completion"]], "create_native_generator() (pyalm.gemini.gemini method)": [[4, "pyalm.gemini.Gemini.create_native_generator"]], "get_n_tokens() (pyalm.gemini.gemini method)": [[4, "pyalm.gemini.Gemini.get_n_tokens"]], "pyalm.gemini": [[4, "module-pyalm.gemini"]], "tokenize() (pyalm.gemini.gemini method)": [[4, "pyalm.gemini.Gemini.tokenize"]], "tokenize_as_str() (pyalm.gemini.gemini method)": [[4, "pyalm.gemini.Gemini.tokenize_as_str"]], "llama (class in pyalm.llama)": [[5, "pyalm.llama.LLaMa"]], "build_prompt() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.build_prompt"]], "create_native_completion() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.create_native_completion"]], "create_native_generator() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.create_native_generator"]], "detokenize() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.detokenize"]], "get_n_tokens() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.get_n_tokens"]], "load_state_from_disk() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.load_state_from_disk"]], "pyalm.llama": [[5, "module-pyalm.llama"]], "restore_ctx_from_disk() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.restore_ctx_from_disk"]], "save_ctx_to_disk() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.save_ctx_to_disk"]], "save_state_to_disk() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.save_state_to_disk"]], "setup_backend() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.setup_backend"]], "tokenize() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.tokenize"]], "tokenize_as_str() (pyalm.llama.llama method)": [[5, "pyalm.llama.LLaMa.tokenize_as_str"]], "openai (class in pyalm.openai)": [[6, "pyalm.openai.OpenAI"]], "available_models (pyalm.openai.openai attribute)": [[6, "pyalm.openai.OpenAI.available_models"]], "build_prompt() (pyalm.openai.openai method)": [[6, "pyalm.openai.OpenAI.build_prompt"]], "create_native_completion() (pyalm.openai.openai method)": [[6, "pyalm.openai.OpenAI.create_native_completion"]], "create_native_generator() (pyalm.openai.openai method)": [[6, "pyalm.openai.OpenAI.create_native_generator"]], "get_available_models() (pyalm.openai.openai method)": [[6, "pyalm.openai.OpenAI.get_available_models"]], "get_n_tokens() (pyalm.openai.openai method)": [[6, "pyalm.openai.OpenAI.get_n_tokens"]], "pricing (pyalm.openai.openai attribute)": [[6, "pyalm.openai.OpenAI.pricing"]], "pricing_meta (pyalm.openai.openai attribute)": [[6, "pyalm.openai.OpenAI.pricing_meta"]], "pyalm.openai": [[6, "module-pyalm.openai"]], "tokenize() (pyalm.openai.openai method)": [[6, "pyalm.openai.OpenAI.tokenize"]], "tokenize_as_str() (pyalm.openai.openai method)": [[6, "pyalm.openai.OpenAI.tokenize_as_str"]], "get_resource_diff() (in module pyalm.resources)": [[7, "pyalm.resources.get_resource_diff"]], "get_resource_info() (in module pyalm.resources)": [[7, "pyalm.resources.get_resource_info"]], "pyalm.resources": [[7, "module-pyalm.resources"]]}})